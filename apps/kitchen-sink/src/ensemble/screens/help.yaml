View:
  styles:
    scrollableView: true

  header:
    title:
      Header:

  body:
    Column:
      styles:
        names: page
      children:
        - Row:
            styles:
              mainAxis: spaceBetween
            children:
              - Icon:
                  name: ArrowBack
                  onTap:
                    executeCode: |-
                      ensemble.navigateBack();
              - Button:
                  label: navigate to widgets
                  onTap:
                    navigateScreen:
                      name: widgets
                      inputs:
                        input1: "hello"
                        input2: "world"

        - Button:
            label: toggle modal
            onTap:
              showDialog:
                options:
                  minWidth: 500px
                body:
                  MultiSelect:
                    label: test
                    data: ${ensemble.storage.get('testoptions')}
                    labelKey: label
                    valueKey: value
                    value: ${ensemble.storage.get('testselect') || []}
                    onChange:
                      executeCode: |
                        ensemble.storage.set('testselect', option)
                    onSearch:
                      executeCode: |
                        const tempOptions = ensemble.storage.get('testlistoptions')
                        const filteredResult = tempOptions.filter(option => 
                          option.label.toLowerCase().startsWith(search.toLowerCase())
                        )
                        ensemble.storage.set('testoptions', filteredResult)

        - Button:
            label: set storage variable
            onTap:
              executeCode: |
                ensemble.storage.set('isTestAvailable', 'yes !!!')

        - Text:
            styles:
              names: heading-1
            text: Help
        - Markdown:
            text: More to come! In the meantime, checkout the Ensemble [documentation](https://docs.ensembleui.com/).
        - Card:
            styles:
              maxWidth: unset
              width: unset
              gap: 10px
            children:
              - Markdown:
                  text: |
                    ### Image Cropper
              - ImageCropper:
                  id: imageCropper
                  source: https://img.huffingtonpost.com/asset/5ab4d4ac2000007d06eb2c56.jpeg?cache=sih0jwle4e&ops=1910_1000
                  styles:
                    strokeColor: red
                    strokeWidth: 2px
                  onCropped:
                    executeCode: |
                      console.log('Image Cropped Successfully', file)
                      croppedImage.setSource(file)

              - Button:
                  label: Rotate clockwise
                  onTap:
                    executeCode: |
                      imageCropper.setRotate(imageCropper.rotate + 90)
              - Button:
                  label: Rotate anti-clockwise
                  onTap:
                    executeCode: |
                      imageCropper.setRotate(imageCropper.rotate - 90)
              - Button:
                  label: Crop
                  onTap:
                    executeCode: |
                      imageCropper.crop()

              - Image:
                  id: croppedImage
                  styles:
                    maxWidth: 500px
                  source: https://img.huffingtonpost.com/asset/5ab4d4ac2000007d06eb2c56.jpeg?cache=sih0jwle4e&ops=1910_1000
