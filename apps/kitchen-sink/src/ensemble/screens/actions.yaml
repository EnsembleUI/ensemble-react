View:
  header:
    title:
      Header:

  onLoad:
    executeCode: |
      ensemble.storage.set('test', 'hello')
  body:
    Column:
      styles:
        names: page
        gap: 8px
      children:
        - Text:
            styles:
              names: heading-1
            text: Actions
        - Markdown:
            text: More to come! In the meantime, checkout the Ensemble [documentation](https://docs.ensembleui.com/).
        - Card:
            styles:
              maxWidth: unset
              width: unset
            children:
              - Text:
                  styles:
                    names: heading-3
                  text: Invoke API
              - Button:
                  label: Get Data
                  onTap:
                    executeCode:
                      body: |
                        eval(ensemble.storage.get('fnVar'));
              - TextInput:
                  id: getDataInputValue
                  label: Product ID
                  value: "1"
              - Button:
                  label: Get Data With Inputs
                  onTap:
                    invokeApi:
                      name: getDummyProduct
                      inputs:
                        id: ${getDataInputValue.value}
                      onResponse:
                        executeCode:
                          body: |
                            getDataInputValue.setValue(String(Number(getDataInputValue.value) + 1))
              - Text:
                  text: ${JSON.stringify(getDummyProduct.body)}
        - Card:
            styles:
              maxWidth: unset
              width: unset
            children:
              - Text:
                  styles:
                    names: heading-3
                  text: ensemble.navigateScreen()
              - Markdown:
                  text: use `ensemble.navigateScreen({name:, inputs:{:}})` for navigate screen programmatically. click below button to check.
              - Button:
                  label: navigate screen
                  onTap:
                    executeCode:
                      body: |
                        console.log(getDataInputValue)
                        const payload = {
                          name: 'John Doe',
                          age: 30,
                        };
                        ensemble.navigateScreen({
                          name: 'home', 
                          inputs: payload
                        });
        - Card:
            styles:
              maxWidth: unset
              width: unset
            children:
              - Text:
                  styles:
                    names: heading-3
                  text: ensemble.navigateUrl()
              - Markdown:
                  text: use `ensemble.navigateUrl(path, data)` for navigate screen programmatically. click below button to check.
              - Button:
                  label: navigate url
                  onTap:
                    executeCode: |
                      ensemble.navigateUrl('/widgets?name=sagar')
              - Text:
                  styles:
                    names: heading-3
                  text: navigateUrl
              - Markdown:
                  text: "use `navigateUrl: screen_name` for navigate screen programmatically. click below button to check"
              - Button:
                  label: navigate url
                  onTap:
                    navigateUrl: /widgets
              - Text:
                  styles:
                    names: heading-3
                  text: navigateModalScreen
              - Markdown:
                  text: "use `navigateModalScreen: screen_name` for navigate modal screen programmatically. click below button to check"
              - Button:
                  label: navigateModalScreen
                  onTap:
                    navigateModalScreen:
                      name: Forms
                      hideCloseIcon: false
                      hideFullScreenIcon: false
                      title:
                        Column:
                          children:
                            - Text:
                                text: Modal Screen title
                            - Text:
                                text: Modal Screen subtitle
                                styles:
                                  fontSize: ${typography.fontSize['14']}
                                  fontWeight: ${typography.fontWeight.light}
                      styles:
                        height: 300px
                        width: 100%
        - Card:
            styles:
              maxWidth: unset
              width: unset
            children:
              - Text:
                  id: showDialogText
                  styles:
                    names: heading-3
                  text: Show Dialog
              - Markdown:
                  text: use `ensemble.showDialog` to show dialog programmatically. click below button to check.
              - Button:
                  label: Custom widget in dialog
                  onTap:
                    executeCode: |-
                      ensemble.showDialog({
                        widget: StyledText,
                        options: {
                          width: '400px',
                          height: '250px',
                        },
                      });
              - Button:
                  label: Custom widget with input in dialog
                  onTap:
                    executeCode: |-
                      ensemble.showDialog({
                        widget: {StyledText: {inputs: {inputText: 'Hello World hiop'}}},
                        options: {
                          width: '300px',
                          height: '200px',
                        },
                      });
              - Button:
                  label: Inline widget in dialog
                  onTap:
                    executeCode: |-
                      ensemble.showDialog({
                        body: {Text: {text: 'Hello World'}},
                        options: {
                          backgroundColor: 'aqua',
                        },
                      });
              - Markdown:
                  text: use `showDialog` to show dialog. click below button to check.
              - Button:
                  label: Show dialog
                  onTap:
                    showDialog:
                      options:
                        width: 600px
                        height: 100%
                        position: right
                      onDialogDismiss:
                        executeCode:
                          body: |
                            console.log('Dialog 1 Dismissed');
                      body:
                        Button:
                          label: ${'Tap me to ' + showDialogText.text}
                          onTap:
                            showDialog:
                              options:
                                verticalOffset: 0.6
                              onDialogDismiss:
                                executeCode:
                                  body: |
                                    console.log('Dialog 2 Dismissed');
                              widget:
                                Button:
                                  label: Tap me to open one more dialog
                                  onTap:
                                    showDialog:
                                      options:
                                        horizontalOffset: -0.8
                                        height: 100%
                                      widget:
                                        Column:
                                          styles:
                                            margin: 100px
                                          children:
                                            - Button:
                                                label: Click me to close all dialogs
                                                onTap:
                                                  closeAllDialogs:
              - Markdown:
                  text: You can still access the current screen's scope from a dialog.
              - Column:
                  item-template:
                    data: ["foo", "bar"]
                    name: value
                    template:
                      Column:
                        children:
                          - Text:
                              text: ${ensemble.storage.get('test')}
                          - Button:
                              label: Open Dialog with Template Value
                              onTap:
                                showDialog:
                                  widget:
                                    Button:
                                      label: ${"The value is:" + value + "! Click me"}
                                      onTap:
                                        executeCode: |
                                          ${ensemble.storage.set('test', value)}
        - Card:
            styles:
              maxWidth: unset
              width: unset
            children:
              - Text:
                  styles:
                    names: heading-3
                  text: Upload files
              - Button:
                  label: upload
                  onTap:
                    pickFiles:
                      id: fileUploader
                      allowMultiple: true
                      allowedExtensions:
                        - pdf
                        - docx
                      onComplete:
                        executeCode: |
                          console.log(fileUploader, "hello", files);

API:
  getDummyProducts:
    method: GET
    uri: https://dummyjson.com/products
  getDummyProduct:
    method: GET
    uri: https://dummyjson.com/products/${id}
    inputs:
      - id
