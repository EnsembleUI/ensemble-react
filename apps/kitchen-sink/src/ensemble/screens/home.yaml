View:
  onLoad:
    executeCode: |
      ensemble.storage.set('yyy' , 'page')
      ensemble.storage.set('zzz' , 'button')
      ensemble.storage.set('aaa' , '1')
  header:
    title:
      Header:

  styles:
    backgroundColor: ${colors.primary['200']}

  body:
    Column:
      styles:
        names: ${ensemble.storage.yyy}
      children:
        - Text:
            styles:
              names: heading-1
              color: ${colors.primary['900']}
            text: The Kitchen Sink
        - Markdown:
            text: This application is built with Ensemble and serves as a guide for how to implement common UI patterns with Ensemble React.
        - Button:
            styles:
              className: page-1 ${ensemble.storage.zzz + '-' + ensemble.storage.aaa}
            label: ${productTitleName}
            onTap:
              executeCode: |
                // Calls a function defined in test.js
                sayHello();

        - Button:
            label: show error
            onTap:
              invokeAPI:
                name: ERROR500
                onError:
                  showToast:
                    message: ${error.response.data.description}
                    options:
                      type: error
                      position: topRight
                onResponse:
                  executeCode: console.log('onresponse', response)

        - Text:
            styles:
              names: heading-1
            text: Change theme
        - PopupMenu:
            showDivider: true
            styles:
              width: 100px
              backgroundColor: ${colors.primary['500']}
            items:
              - label: Light
                value: default
              - label: Dark
                value: dark
            widget:
              Icon:
                name: Settings
            onItemSelect:
              executeCode: |
                ensemble.setTheme(value)

        - Divider:

        - Text:
            styles:
              names: heading-1
            text: Socket Example

        - Row:
            styles:
              gap: 8
              margin: 10px 0px
            children:
              - Button:
                  styles:
                    borderRadius: 20
                  label: Connect Socket
                  onTap:
                    connectSocket:
                      name: echo
              - Button:
                  styles:
                    borderRadius: 20
                  label: Disconnect Socket
                  onTap:
                    disconnectSocket:
                      name: echo

        - Row:
            styles:
              gap: 8
              margin: 10px 0px
            children:
              - Button:
                  styles:
                    borderRadius: 20
                  label: Connect Socket JS
                  onTap:
                    executeCode:
                      body: |
                        ensemble.connectSocket('echo')
                      onComplete:
                        executeCode: |
                          socketStatus.setText('Connected')
                          echo.onmessage = (e) => {
                            socketReceivedMessage.setText(e.data)
                          };
                          echo.onclose = (e) => {
                            socketStatus.setText('Disconnected')
                          };
              - Button:
                  styles:
                    borderRadius: 20
                  label: Disconnect Socket JS
                  onTap:
                    executeCode: |
                      ensemble.disconnectSocket('echo')

        - Row:
            styles:
              gap: 8
              margin: 10px 0px
            children:
              - Text:
                  fontWeight: 900
                  text: "Socket Status :"

              - Text:
                  id: socketStatus

        - Row:
            styles:
              gap: 8
            children:
              - TextInput:
                  id: socketMessageBox
                  hintText: Type message here

              - Button:
                  label: Send Message
                  onTap:
                    messageSocket:
                      name: echo
                      message:
                        msg: ${socketMessageBox.value}
                        x: ${ensemble.storage.yyy}

              - Button:
                  label: Send Message JS
                  onTap:
                    executeCode: |
                      ensemble.messageSocket('echo', {msg: socketMessageBox.value, x: ensemble.storage.yyy})

        - Text:
            styles:
              fontWeight: 900
              margin: 10px 0px
            text: Message from socket

        - Text:
            styles:
              margin: 10px 0px
            id: socketReceivedMessage

Global:
  scriptName: test.js

Import:
  - common

Socket:
  echo:
    uri: wss://echo.websocket.org/

    onSuccess:
      executeCode: |
        socketStatus.setText('Connected')

    onReceive:
      executeCode: |
        socketReceivedMessage.setText(data)

    onDisconnect:
      executeCode: |
        socketStatus.setText('Disconnected')

API:
  ERROR500:
    method: GET
    uri: https://httpstat.us/500
