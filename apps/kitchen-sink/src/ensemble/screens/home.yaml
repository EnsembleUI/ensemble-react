View:
  onLoad:
    executeCode: |
      ensemble.storage.set('yyy' , 'page')
      ensemble.storage.set('zzz' , 'button')
      ensemble.storage.set('aaa' , '1')
  header:
    title:
      Header:

  styles:
    backgroundColor: ${colors.primary['200']}

  body:
    Column:
      styles:
        names: ${ensemble.storage.get('yyy')}
      children:
        - Text:
            styles:
              names: heading-1
              color: ${colors.primary['900']}
            text: The Kitchen Sink
        - Markdown:
            text: This application is built with Ensemble and serves as a guide for how to implement common UI patterns with Ensemble React.
        - Button:
            styles:
              className: page-1 ${ensemble.storage.get('zzz') + '-' + ensemble.storage.get('aaa')}
            label: ${productTitleName}
            onTap:
              executeCode: |
                // Calls a function defined in test.js
                sayHello();

        - Button:
            label: show error
            onTap:
              invokeAPI:
                name: ERROR500
                onError:
                  showToast:
                    message: ${error.response.data.description}
                    options:
                      type: error
                      position: topRight
                onResponse:
                  executeCode: console.log('onresponse', response)

        - Text:
            styles:
              names: heading-1
            text: Change theme
        - PopupMenu:
            showDivider: true
            items:
              - label: Light
                value: default
              - label: Dark
                value: dark
            widget:
              Icon:
                name: Settings
            onItemSelect:
              executeCode: |
                ensemble.setTheme(value)

Global:
  scriptName: test.js

Import:
  - common

API:
  ERROR500:
    method: GET
    uri: https://httpstat.us/500
