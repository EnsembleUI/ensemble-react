name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.32.2
          run_install: true
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
      # TODO only do this when changesets are empty
      - name: Build Packages
        run: pnpm run build --filter=./packages
      - name: Generate Schema
        run: pnpm run schema:generate
      - name: Build Applications
        run: pnpm run build
        working-directory: ./apps/preview
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_ENSEMBLE_WEB_STUDIO }}"
          channelId: live
          projectId: ensemble-web-studio
          entryPoint: ./apps/preview
      - name: Package Starter
        run: zip -r "apps/starter/ensemble-starter-$(jq -r '.version' apps/starter/package.json).zip" apps/starter/build
      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCT_KEY_JSON }}

      - id: "upload-file"
        uses: "google-github-actions/upload-cloud-storage@v2"
        with:
          path: "apps/starter"
          destination: "ensemble-react-starter"
          glob: "*.zip"
      - name: Create Release Pull Request
        uses: changesets/action@v1
        with:
          publish: pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
